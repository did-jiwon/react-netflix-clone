.row {
    margin-left: 20px;
    color: white;
}

h2 {
    padding-left: 20px;
}

.slider {
    position: relative;
}

.slider__arrow-left {
    /* 배경이 요소의 콘텐츠 영역을 따라 클리핑(자르기)됨, 테두리와 패딩 영역은 배경을 표시하지 않음. */
    background-clip: content-box;
    padding: 20px 0;
    box-sizing: border-box;
    transition: 400ms all ease-in-out;
    cursor: pointer;
    width: 80px;
    z-index: 1000;
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden;
}

.slider__arrow-right {
    background-clip: content-box;
    padding: 20px 0;
    box-sizing: border-box;
    transition: 400ms all ease-in-out;
    cursor: pointer;
    width: 80px;
    z-index: 1000;
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden;
}

.arrow {
    /* "ease-in-out"은 전환 효과의 타이밍 함수를 나타냅니다. 이 타이밍 함수는 전환의 시작과 끝에서 천천히 가속하고 감속하는 부드러운 효과를 생성합니다. 다른 선택 가능한 타이밍 함수로는 "ease", "linear", "ease-in", "ease-out" 등이 있습니다. */
    transition: 400ms all ease-in-out;
}

.arrow:hover {
    transition: 400ms all ease-in-out;
    /* 마우스를 올리면 이 크기로 키워짐 */
    transform: scale(1.5);
}

.slider:hover .slider__arrow-left {
    transition: 400ms all ease-in-out;
    visibility: visible;
}

.slider:hover .slider__arrow-right {
    transition: 400ms all ease-in-out;
    visibility: visible;
}

.slider__arrow-left:hover {
    background: rgba(20, 20, 20, 0.5);
    transition: 400ms all ease-in-out;
}

.slider__arrow-right:hover {
    background: rgba(20, 20, 20, 0.5);
    transition: 400ms all ease-in-out;
}

.row__posters {
    display: flex;
    /* 요소의 세로 방향 오버플로우를 제어하는 속성 */
    overflow-y: hidden;
    overflow-x: scroll;
    padding: 20px 0 20px 20px;
    /* 호환성 확인 필요 */
    scroll-behavior: smooth;
}

/* 좌우 스크롤바를 숨기는거인듯? */
.row__posters::-webkit-scrollbar {
    display: none;
}

.row__poster {
    /* object-fit: contain;은 대체 컨텐츠가 요소의 컨테이너에 맞춰서 비율을 유지하면서 조정되도록 지정합니다. 즉, 이미지나 비디오의 원본 비율을 유지하면서 가능한 한 많은 영역을 채우도록 확대하거나 축소하되, 컨테이너의 너비와 높이를 초과하지 않습니다. */
    object-fit: contain;
    width: 100%;
    max-height: 144px;
    margin-right: 10px;
    /* transform 속성이 변경될 때 변경이 450ms동안 부드럽게 이루어지도록 설정 */
    transition: transform 450ms;
    border-radius: 4px;
}

.row__poster:hover {
    transform: scale(1.08);
}

.row__posterLarge {
    max-height: 320px;
}

.row__posterLarge:hover {
    transform: scale(1.1);
    opacity: 1;
}

.swiper-pagination {
    text-align: right !important;
}

.swiper-pagination-bullet {
    background: gray !important;
    opacity: 1 !important;
}

.swiper-pagination-bullet-active {
    background: white !important;
}

.swiper-button-prev {
    color: white !important;
}

.swiper-button-next {
    color: white !important;
}

.swiper-button-next:after,
.swiper-button-prev:after {
    font-size: 1.3rem !important;
    font-weight: 600 !important;
}